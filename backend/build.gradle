plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'com.netflix.dgs.codegen' version '6.2.1'
}

group = 'com.softwaredos'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	

    implementation group: 'org.springframework.security', name: 'spring-security-core', version: '6.3.0'
    implementation group: 'org.springframework.security', name: 'spring-security-web', version: '6.3.0'
    implementation group: 'org.springframework.security', name: 'spring-security-config', version: '6.3.0'

	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'com.graphql-java-kickstart:graphql-java-tools:12.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework:spring-webflux'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'    
}

tasks.named('test') {
	useJUnitPlatform()
}

generateJava {
	schemaPaths = ["${projectDir}/src/main/resources/graphql-client"]
	packageName = 'com.softwaredos.clinica.codegen'
	generateClient = true
}

